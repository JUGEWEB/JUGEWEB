{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { storage, auth } from \"./firebaseConfig\"; // Import the auth and storage\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport \"./FileUpload.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [downloadURL, setDownloadURL] = useState(null); // Store the download URL here\n  const [user, setUser] = useState(null);\n\n  // Listen for authentication state changes\n  onAuthStateChanged(auth, user => {\n    setUser(user);\n  });\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    // Check if a file has been selected\n    if (!file) {\n      alert(\"Please choose the file first.\");\n      return;\n    }\n    if (!user) {\n      alert(\"You need to be logged in to upload files.\");\n      return;\n    }\n    const storageRef = ref(storage, \"uploads/\" + file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => {\n      console.error(\"Upload error: \", error);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(url => {\n        setDownloadURL(url); // Set the download URL after successful upload\n        alert(\"File uploaded successfully! Copy the URL below.\");\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `file-input ${!file ? 'file-input-error' : ''}`,\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !file && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Please choose the file first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"progress-text\",\n      children: [\"Upload progress: \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), downloadURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-url-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"File uploaded! Copy the URL below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"url-textarea\",\n        value: downloadURL,\n        readOnly: true,\n        rows: 4,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"JpLOpc1HS66MfJ5wlrxp3p/FYFE=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","storage","auth","ref","uploadBytesResumable","getDownloadURL","onAuthStateChanged","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","progress","setProgress","downloadURL","setDownloadURL","user","setUser","handleFileChange","e","target","files","handleFileUpload","alert","storageRef","name","uploadTask","on","snapshot","bytesTransferred","totalBytes","error","console","then","url","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","readOnly","rows","cols","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { storage, auth } from \"./firebaseConfig\"; // Import the auth and storage\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport \"./FileUpload.css\"; // Import the CSS file for styling\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [downloadURL, setDownloadURL] = useState(null); // Store the download URL here\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Listen for authentication state changes\r\n  onAuthStateChanged(auth, (user) => {\r\n    setUser(user);\r\n  });\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    // Check if a file has been selected\r\n    if (!file) {\r\n      alert(\"Please choose the file first.\");\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      alert(\"You need to be logged in to upload files.\");\r\n      return;\r\n    }\r\n\r\n    const storageRef = ref(storage, \"uploads/\" + file.name);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.error(\"Upload error: \", error);\r\n      },\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          setDownloadURL(url); // Set the download URL after successful upload\r\n          alert(\"File uploaded successfully! Copy the URL below.\");\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <input\r\n        className={`file-input ${!file ? 'file-input-error' : ''}`}\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n      />\r\n      { !file && <p className=\"error-message\">Please choose the file first.</p> }\r\n      <button className=\"upload-button\" onClick={handleFileUpload}>Upload</button>\r\n      {progress > 0 && <p className=\"progress-text\">Upload progress: {progress}%</p>}\r\n      {downloadURL && (\r\n        <div className=\"download-url-container\">\r\n          <p>File uploaded! Copy the URL below:</p>\r\n          <textarea className=\"url-textarea\" value={downloadURL} readOnly rows={4} cols={50}></textarea>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}