{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\uploadFolder.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadFolder() {\n  _s();\n  const [imagesVariants, setImagesVariants] = useState({});\n  const [video, setVideo] = useState(null);\n  const [textFiles, setTextFiles] = useState([]);\n  const [folderId, setFolderId] = useState(Date.now().toString()); // Unique folder ID\n\n  // Handle Drag-and-Drop for images-variants\n  const handleDrop = async event => {\n    event.preventDefault();\n    const items = event.dataTransfer.items;\n    const variants = {};\n    for (let i = 0; i < items.length; i++) {\n      const entry = items[i].webkitGetAsEntry();\n      if (entry.isDirectory) {\n        await processDirectory(entry, variants);\n      }\n    }\n    setImagesVariants(variants);\n  };\n  const processDirectory = async (directoryEntry, variants) => {\n    const reader = directoryEntry.createReader();\n    const entries = await new Promise(resolve => reader.readEntries(resolve));\n    for (const entry of entries) {\n      if (entry.isFile) {\n        const file = await new Promise(resolve => entry.file(resolve));\n        const folderName = directoryEntry.name;\n        if (!variants[folderName]) variants[folderName] = [];\n        variants[folderName].push(file);\n      } else if (entry.isDirectory) {\n        await processDirectory(entry, variants); // Recursively process subfolders\n      }\n    }\n  };\n\n  // Prevent default behavior for drag events\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n\n  // Handle video selection\n  const handleVideoChange = e => {\n    setVideo(e.target.files[0]);\n  };\n\n  // Handle text creation\n  const handleAddTextFile = (textName, textContent) => {\n    setTextFiles(prev => [...prev, {\n      name: textName,\n      content: textContent\n    }]);\n  };\n  const uploadFiles = async () => {\n    const formData = new FormData();\n\n    // Add folder ID\n    formData.append(\"folderId\", folderId);\n\n    // Append images-variants grouped by folder\n    Object.entries(imagesVariants).forEach(([folderName, files]) => {\n      files.forEach(file => {\n        formData.append(`images-variants[${folderName}]`, file);\n      });\n    });\n\n    // Append video\n    if (video) {\n      formData.append(\"video\", video);\n    }\n\n    // Append text files\n    textFiles.forEach(textFile => {\n      formData.append(`text[${textFile.name}]`, textFile.content);\n    });\n    try {\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      style: {\n        border: \"2px dashed #ccc\",\n        padding: \"20px\",\n        marginBottom: \"20px\",\n        textAlign: \"center\"\n      },\n      children: [\"Drag and drop your \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"images-variants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 28\n      }, this), \" folder here\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Text Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n        onAdd: handleAddTextFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFiles,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n// TextEditor component for adding text content\n_s(UploadFolder, \"g4buOVkSItw/8QEtHZI2phthl+8=\");\n_c = UploadFolder;\nfunction TextEditor({\n  onAdd\n}) {\n  _s2();\n  const [textName, setTextName] = useState(\"\");\n  const [textContent, setTextContent] = useState(\"\");\n  const handleAddText = () => {\n    if (textName && textContent) {\n      onAdd(textName, textContent);\n      setTextName(\"\");\n      setTextContent(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Text file name\",\n      value: textName,\n      onChange: e => setTextName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Text content\",\n      value: textContent,\n      onChange: e => setTextContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddText,\n      children: \"Add Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s2(TextEditor, \"l6gF1CyKlYRAbVZzP3DuJqK+XU8=\");\n_c2 = TextEditor;\nexport default UploadFolder;\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadFolder\");\n$RefreshReg$(_c2, \"TextEditor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadFolder","_s","imagesVariants","setImagesVariants","video","setVideo","textFiles","setTextFiles","folderId","setFolderId","Date","now","toString","handleDrop","event","preventDefault","items","dataTransfer","variants","i","length","entry","webkitGetAsEntry","isDirectory","processDirectory","directoryEntry","reader","createReader","entries","Promise","resolve","readEntries","isFile","file","folderName","name","push","handleDragOver","handleVideoChange","e","target","files","handleAddTextFile","textName","textContent","prev","content","uploadFiles","formData","FormData","append","Object","forEach","textFile","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","style","border","padding","marginBottom","textAlign","type","accept","onChange","TextEditor","onAdd","onClick","_c","_s2","setTextName","setTextContent","handleAddText","placeholder","value","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/uploadFolder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UploadFolder() {\r\n  const [imagesVariants, setImagesVariants] = useState({});\r\n  const [video, setVideo] = useState(null);\r\n  const [textFiles, setTextFiles] = useState([]);\r\n  const [folderId, setFolderId] = useState(Date.now().toString()); // Unique folder ID\r\n\r\n  // Handle Drag-and-Drop for images-variants\r\n  const handleDrop = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const items = event.dataTransfer.items;\r\n    const variants = {};\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      const entry = items[i].webkitGetAsEntry();\r\n      if (entry.isDirectory) {\r\n        await processDirectory(entry, variants);\r\n      }\r\n    }\r\n\r\n    setImagesVariants(variants);\r\n  };\r\n\r\n  const processDirectory = async (directoryEntry, variants) => {\r\n    const reader = directoryEntry.createReader();\r\n    const entries = await new Promise((resolve) => reader.readEntries(resolve));\r\n\r\n    for (const entry of entries) {\r\n      if (entry.isFile) {\r\n        const file = await new Promise((resolve) => entry.file(resolve));\r\n        const folderName = directoryEntry.name;\r\n\r\n        if (!variants[folderName]) variants[folderName] = [];\r\n        variants[folderName].push(file);\r\n      } else if (entry.isDirectory) {\r\n        await processDirectory(entry, variants); // Recursively process subfolders\r\n      }\r\n    }\r\n  };\r\n\r\n  // Prevent default behavior for drag events\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Handle video selection\r\n  const handleVideoChange = (e) => {\r\n    setVideo(e.target.files[0]);\r\n  };\r\n\r\n  // Handle text creation\r\n  const handleAddTextFile = (textName, textContent) => {\r\n    setTextFiles((prev) => [\r\n      ...prev,\r\n      { name: textName, content: textContent },\r\n    ]);\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    const formData = new FormData();\r\n\r\n    // Add folder ID\r\n    formData.append(\"folderId\", folderId);\r\n\r\n    // Append images-variants grouped by folder\r\n    Object.entries(imagesVariants).forEach(([folderName, files]) => {\r\n      files.forEach((file) => {\r\n        formData.append(`images-variants[${folderName}]`, file);\r\n      });\r\n    });\r\n\r\n    // Append video\r\n    if (video) {\r\n      formData.append(\"video\", video);\r\n    }\r\n\r\n    // Append text files\r\n    textFiles.forEach((textFile) => {\r\n      formData.append(`text[${textFile.name}]`, textFile.content);\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      console.log(\"Upload successful:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Folder</h2>\r\n\r\n      {/* Drag-and-Drop Zone for Images-Variants */}\r\n      <div\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n        style={{\r\n          border: \"2px dashed #ccc\",\r\n          padding: \"20px\",\r\n          marginBottom: \"20px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Drag and drop your <strong>images-variants</strong> folder here\r\n      </div>\r\n\r\n      {/* Select Video */}\r\n      <div>\r\n        <label>Select Video:</label>\r\n        <input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\r\n      </div>\r\n\r\n      {/* Add Text Files */}\r\n      <div>\r\n        <h3>Add Text Content:</h3>\r\n        <TextEditor onAdd={handleAddTextFile} />\r\n      </div>\r\n\r\n      {/* Upload Button */}\r\n      <button onClick={uploadFiles}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// TextEditor component for adding text content\r\nfunction TextEditor({ onAdd }) {\r\n  const [textName, setTextName] = useState(\"\");\r\n  const [textContent, setTextContent] = useState(\"\");\r\n\r\n  const handleAddText = () => {\r\n    if (textName && textContent) {\r\n      onAdd(textName, textContent);\r\n      setTextName(\"\");\r\n      setTextContent(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Text file name\"\r\n        value={textName}\r\n        onChange={(e) => setTextName(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Text content\"\r\n        value={textContent}\r\n        onChange={(e) => setTextContent(e.target.value)}\r\n      />\r\n      <button onClick={handleAddText}>Add Text</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadFolder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}