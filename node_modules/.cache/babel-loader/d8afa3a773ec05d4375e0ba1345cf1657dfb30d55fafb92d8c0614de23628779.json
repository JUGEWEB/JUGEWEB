{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BASE_URL=\"https://api.malidag.com\";const PetHeader=()=>{const[selectedType,setSelectedType]=useState('');const[imageUrl,setImageUrl]=useState(null);const[loading,setLoading]=useState(false);const[petTypes,setPetTypes]=useState([]);useEffect(()=>{const fetchPetTypes=async()=>{try{const response=await axios.get(`${BASE_URL}/items`);const data=response.data.items;const petItems=data.filter(item=>{var _item$category;return((_item$category=item.category)===null||_item$category===void 0?void 0:_item$category.toLowerCase())===\"pet care\";});const uniqueTypes=[...new Set(petItems.map(item=>{var _item$item$type;return(_item$item$type=item.item.type)===null||_item$item$type===void 0?void 0:_item$item$type.toLowerCase();}))].filter(Boolean);setPetTypes(uniqueTypes);}catch(error){console.error(\"Error fetching pet items:\",error);}};fetchPetTypes();},[]);const handleTypeChange=e=>{setSelectedType(e.target.value);setImageUrl(null);};const handleImageUpload=async e=>{const file=e.target.files[0];if(!file)return;if(!selectedType){alert('Please select a pet type before uploading.');return;}const formData=new FormData();formData.append('image',file);try{setLoading(true);const response=await axios.post(`${BASE_URL}/pet/${selectedType}/image`,formData,{headers:{'Content-Type':'multipart/form-data'}});setImageUrl(response.data.imageUrl);}catch(error){var _error$response;console.error('Error uploading image:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert('Failed to upload image. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pet Header Upload\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedType,onChange:handleTypeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Pet Type\"}),petTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type.replace(/-/g,' ')},type))]}),selectedType&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",onChange:handleImageUpload}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Uploading...\"})]}),imageUrl&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Uploaded Image for \",selectedType.replace(/-/g,' ')]}),/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:selectedType,style:{width:'1200px',height:'auto',borderRadius:'8px'}})]})]});};export default PetHeader;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BASE_URL","PetHeader","selectedType","setSelectedType","imageUrl","setImageUrl","loading","setLoading","petTypes","setPetTypes","fetchPetTypes","response","get","data","items","petItems","filter","item","_item$category","category","toLowerCase","uniqueTypes","Set","map","_item$item$type","type","Boolean","error","console","handleTypeChange","e","target","value","handleImageUpload","file","files","alert","formData","FormData","append","post","headers","_error$response","message","children","onChange","replace","accept","src","alt","style","width","height","borderRadius"],"sources":["C:/Users/User/Desktop/product/malidagproduct/src/components/petheader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://api.malidag.com\";\r\n\r\nconst PetHeader = () => {\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [petTypes, setPetTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPetTypes = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/items`);\r\n        const data = response.data.items;\r\n\r\n        const petItems = data.filter((item) =>\r\n          item.category?.toLowerCase() === \"pet care\"\r\n        );\r\n\r\n        const uniqueTypes = [\r\n          ...new Set(petItems.map((item) => item.item.type?.toLowerCase()))\r\n        ].filter(Boolean);\r\n\r\n        setPetTypes(uniqueTypes);\r\n      } catch (error) {\r\n        console.error(\"Error fetching pet items:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPetTypes();\r\n  }, []);\r\n\r\n  const handleTypeChange = (e) => {\r\n    setSelectedType(e.target.value);\r\n    setImageUrl(null);\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!selectedType) {\r\n      alert('Please select a pet type before uploading.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        `${BASE_URL}/pet/${selectedType}/image`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        }\r\n      );\r\n\r\n      setImageUrl(response.data.imageUrl);\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error.response?.data || error.message);\r\n      alert('Failed to upload image. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pet Header Upload</h1>\r\n\r\n      <select value={selectedType} onChange={handleTypeChange}>\r\n        <option value=\"\">Select Pet Type</option>\r\n        {petTypes.map((type) => (\r\n          <option key={type} value={type}>\r\n            {type.replace(/-/g, ' ')}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedType && (\r\n        <>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n          {loading && <p>Uploading...</p>}\r\n        </>\r\n      )}\r\n\r\n      {imageUrl && (\r\n        <div>\r\n          <h2>Uploaded Image for {selectedType.replace(/-/g, ' ')}</h2>\r\n          <img\r\n            src={imageUrl}\r\n            alt={selectedType}\r\n            style={{ width: '1200px', height: 'auto', borderRadius: '8px' }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetHeader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}