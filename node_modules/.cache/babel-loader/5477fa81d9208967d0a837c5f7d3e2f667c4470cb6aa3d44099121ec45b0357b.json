{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\uploadFolder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadFolder() {\n  _s();\n  const [folderId, setFolderId] = useState(Date.now().toString()); // Unique folder ID\n  const [files, setFiles] = useState([]);\n  const [video, setVideo] = useState(null);\n  const [textFiles, setTextFiles] = useState([{\n    name: \"\",\n    content: \"\"\n  }]); // For multiple text files\n\n  const handleFileChange = e => {\n    setFiles(e.target.files);\n  };\n  const handleVideoChange = e => {\n    setVideo(e.target.files[0]);\n  };\n  const handleTextChange = (index, field, value) => {\n    const updatedTextFiles = [...textFiles];\n    updatedTextFiles[index][field] = value;\n    setTextFiles(updatedTextFiles);\n  };\n  const addTextFile = () => {\n    setTextFiles([...textFiles, {\n      name: \"\",\n      content: \"\"\n    }]);\n  };\n  const uploadFiles = async () => {\n    const formData = new FormData();\n\n    // Add folder ID to formData\n    formData.append(\"folderId\", folderId);\n\n    // Categorize files into images and images-variants\n    Array.from(files).forEach(file => {\n      console.log(file.webkitRelativePath); // Log to see the directory structure\n\n      // Check if the file is in the 'images' folder\n      if (file.webkitRelativePath.includes(\"images/\")) {\n        formData.append(\"images\", file);\n      }\n      // Check if the file is in the 'images-variants' folder\n      else if (file.webkitRelativePath.includes(\"images-variants/\")) {\n        // Extract the color name from the folder path\n        const variantPathParts = file.webkitRelativePath.split(\"/\");\n        const colorName = variantPathParts[variantPathParts.length - 2]; // Second-to-last part is the folder name\n        formData.append(`images-variants[${colorName}]`, file); // Append with color name as part of key\n      }\n    });\n\n    // Add video file\n    if (video) {\n      formData.append(\"video\", video);\n    }\n\n    // Add text files\n    if (textFiles.length > 0) {\n      formData.append(\"textFiles\", JSON.stringify(textFiles));\n    }\n    try {\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload Images & Images-Variants:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      webkitdirectory: \"true\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Upload Video:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleVideoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add Text Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), textFiles.map((textFile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Text File Name\",\n        value: textFile.name,\n        onChange: e => handleTextChange(index, \"name\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Text Content\",\n        value: textFile.content,\n        onChange: e => handleTextChange(index, \"content\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTextFile,\n      children: \"Add Another Text File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFiles,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFolder, \"KJaOyl3CHGz7hObQs31JEXn8lFg=\");\n_c = UploadFolder;\nexport default UploadFolder;\nvar _c;\n$RefreshReg$(_c, \"UploadFolder\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadFolder","_s","folderId","setFolderId","Date","now","toString","files","setFiles","video","setVideo","textFiles","setTextFiles","name","content","handleFileChange","e","target","handleVideoChange","handleTextChange","index","field","value","updatedTextFiles","addTextFile","uploadFiles","formData","FormData","append","Array","from","forEach","file","console","log","webkitRelativePath","includes","variantPathParts","split","colorName","length","JSON","stringify","response","post","headers","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","webkitdirectory","multiple","onChange","accept","map","textFile","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/uploadFolder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UploadFolder() {\r\n  const [folderId, setFolderId] = useState(Date.now().toString()); // Unique folder ID\r\n  const [files, setFiles] = useState([]);\r\n  const [video, setVideo] = useState(null);\r\n  const [textFiles, setTextFiles] = useState([{ name: \"\", content: \"\" }]); // For multiple text files\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles(e.target.files);\r\n  };\r\n\r\n  const handleVideoChange = (e) => {\r\n    setVideo(e.target.files[0]);\r\n  };\r\n\r\n  const handleTextChange = (index, field, value) => {\r\n    const updatedTextFiles = [...textFiles];\r\n    updatedTextFiles[index][field] = value;\r\n    setTextFiles(updatedTextFiles);\r\n  };\r\n\r\n  const addTextFile = () => {\r\n    setTextFiles([...textFiles, { name: \"\", content: \"\" }]);\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    const formData = new FormData();\r\n\r\n    // Add folder ID to formData\r\n    formData.append(\"folderId\", folderId);\r\n\r\n    // Categorize files into images and images-variants\r\n    Array.from(files).forEach((file) => {\r\n      console.log(file.webkitRelativePath); // Log to see the directory structure\r\n\r\n      // Check if the file is in the 'images' folder\r\n      if (file.webkitRelativePath.includes(\"images/\")) {\r\n        formData.append(\"images\", file);\r\n      }\r\n       // Check if the file is in the 'images-variants' folder\r\n    else if (file.webkitRelativePath.includes(\"images-variants/\")) {\r\n        // Extract the color name from the folder path\r\n        const variantPathParts = file.webkitRelativePath.split(\"/\");\r\n        const colorName = variantPathParts[variantPathParts.length - 2]; // Second-to-last part is the folder name\r\n        formData.append(`images-variants[${colorName}]`, file); // Append with color name as part of key\r\n      }\r\n    });\r\n\r\n    // Add video file\r\n    if (video) {\r\n      formData.append(\"video\", video);\r\n    }\r\n\r\n    // Add text files\r\n    if (textFiles.length > 0) {\r\n      formData.append(\"textFiles\", JSON.stringify(textFiles));\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      console.log(\"Upload successful:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Folder</h2>\r\n\r\n      {/* Folder Input */}\r\n      <label>Upload Images & Images-Variants:</label>\r\n      <input type=\"file\" webkitdirectory=\"true\" multiple onChange={handleFileChange} />\r\n      <br />\r\n\r\n      {/* Video Input */}\r\n      <label>Upload Video:</label>\r\n      <input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\r\n      <br />\r\n\r\n      {/* Text Input */}\r\n      <label>Add Text Files:</label>\r\n      {textFiles.map((textFile, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Text File Name\"\r\n            value={textFile.name}\r\n            onChange={(e) => handleTextChange(index, \"name\", e.target.value)}\r\n          />\r\n          <textarea\r\n            placeholder=\"Text Content\"\r\n            value={textFile.content}\r\n            onChange={(e) => handleTextChange(index, \"content\", e.target.value)}\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={addTextFile}>Add Another Text File</button>\r\n      <br />\r\n\r\n      {/* Submit Button */}\r\n      <button onClick={uploadFiles}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadFolder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}