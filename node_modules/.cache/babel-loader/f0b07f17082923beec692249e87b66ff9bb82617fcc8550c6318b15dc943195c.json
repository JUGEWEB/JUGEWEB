{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\uploadFolder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFiles = () => {\n  _s();\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const [uploadedData, setUploadedData] = useState(null);\n  const handleFolderUpload = async event => {\n    const files = event.target.files; // Get all files in the selected folder\n    const formData = new FormData();\n    for (let file of files) {\n      // Append each file to the FormData object\n      if (file.webkitRelativePath.includes(\"images/\")) {\n        formData.append(\"images\", file);\n      } else if (file.webkitRelativePath.includes(\"images-variants/\")) {\n        formData.append(\"images-variants\", file);\n      }\n    }\n    try {\n      setUploadStatus(\"Uploading...\");\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setUploadedData(response.data); // Store the response data (unique ID and file URLs)\n      setUploadStatus(\"Upload successful!\");\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      setUploadStatus(\"Error uploading files.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Images and Variants from Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a Folder:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        webkitdirectory: \"true\",\n        directory: \"true\",\n        multiple: true,\n        onChange: handleFolderUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this), uploadedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Unique ID: \", uploadedData.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedData.images.map((url, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Variants:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedData.variants.map((url, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFiles, \"yVi31+OeMhS5zxzU1aYTK4Qa1BQ=\");\n_c = UploadFiles;\nexport default UploadFiles;\nvar _c;\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadFiles","_s","uploadStatus","setUploadStatus","uploadedData","setUploadedData","handleFolderUpload","event","files","target","formData","FormData","file","webkitRelativePath","includes","append","response","post","headers","data","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","webkitdirectory","directory","multiple","onChange","id","images","map","url","index","href","rel","variants","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/uploadFolder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadFiles = () => {\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n  const [uploadedData, setUploadedData] = useState(null);\r\n\r\n  const handleFolderUpload = async (event) => {\r\n    const files = event.target.files; // Get all files in the selected folder\r\n    const formData = new FormData();\r\n\r\n    for (let file of files) {\r\n      // Append each file to the FormData object\r\n      if (file.webkitRelativePath.includes(\"images/\")) {\r\n        formData.append(\"images\", file);\r\n      } else if (file.webkitRelativePath.includes(\"images-variants/\")) {\r\n        formData.append(\"images-variants\", file);\r\n      }\r\n    }\r\n\r\n    try {\r\n      setUploadStatus(\"Uploading...\");\r\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      setUploadedData(response.data); // Store the response data (unique ID and file URLs)\r\n      setUploadStatus(\"Upload successful!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      setUploadStatus(\"Error uploading files.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"20px\" }}>\r\n      <h2>Upload Images and Variants from Folders</h2>\r\n      <div>\r\n        <label>Select a Folder:</label>\r\n        <input\r\n          type=\"file\"\r\n          webkitdirectory=\"true\"\r\n          directory=\"true\"\r\n          multiple\r\n          onChange={handleFolderUpload}\r\n        />\r\n      </div>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n      {uploadedData && (\r\n        <div>\r\n          <h3>Uploaded Data:</h3>\r\n          <p>Unique ID: {uploadedData.id}</p>\r\n          <h4>Images:</h4>\r\n          <ul>\r\n            {uploadedData.images.map((url, index) => (\r\n              <li key={index}>\r\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {url}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <h4>Variants:</h4>\r\n          <ul>\r\n            {uploadedData.variants.map((url, index) => (\r\n              <li key={index}>\r\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {url}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}