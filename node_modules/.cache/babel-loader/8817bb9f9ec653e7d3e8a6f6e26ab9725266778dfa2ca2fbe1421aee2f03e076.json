{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadItem=()=>{const[files,setFiles]=useState([]);const[folderID,setFolderID]=useState(\"\");const[type,setType]=useState(\"\");const[text,setText]=useState(\"\");const handleFileChange=e=>{const selectedFiles=[...e.target.files];if(selectedFiles.length===0)return;// **Allow multiple files only for slide_images**\nif(type===\"slide_images\"){setFiles(selectedFiles);}else{setFiles([selectedFiles[0]]);// Only keep the first file\n}};const handleSubmit=async e=>{e.preventDefault();if(!folderID||!type||files.length===0){alert(\"Please fill all fields and select at least one file.\");return;}const formData=new FormData();formData.append(\"folderID\",folderID);formData.append(\"type\",type);formData.append(\"text\",text);files.forEach(file=>formData.append(\"files\",file));try{const response=await fetch(\"https://api.malidag.com/api/items/upload\",{method:\"POST\",body:formData});const data=await response.json();if(response.ok){alert(\"Files uploaded successfully!\");}else{alert(\"Upload failed: \"+data.error);}}catch(error){console.error(\"Error uploading files:\",error);alert(\"Upload failed.\");}};//image-Left_with_text\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Upload Item\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Folder ID\",value:folderID,onChange:e=>setFolderID(e.target.value),className:\"border p-2 w-full\"}),/*#__PURE__*/_jsxs(\"select\",{value:type,onChange:e=>setType(e.target.value),className:\"border p-2 w-full\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"slide_images\",children:\"Slide Images (Multiple Allowed)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"image_with_text\",children:\"Image with Text\"}),/*#__PURE__*/_jsx(\"option\",{value:\"single_image\",children:\"Single Image\"}),/*#__PURE__*/_jsx(\"option\",{value:\"image-Left_with_text\",children:\"Left-Image with Text\"}),/*#__PURE__*/_jsx(\"option\",{value:\"video_with_text\",children:\"Video with Text\"}),/*#__PURE__*/_jsx(\"option\",{value:\"single_video\",children:\"Single Video\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Text (optional)\",value:text,onChange:e=>setText(e.target.value),className:\"border p-2 w-full\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:type===\"slide_images\"// Only allow multiple if type is slide_images\n,accept:type.includes(\"video\")?\"video/*\":\"image/*\"// Restrict file types\n,onChange:handleFileChange,className:\"border p-2 w-full\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white p-2 rounded\",children:\"Upload Item\"})]})]});};export default UploadItem;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UploadItem","files","setFiles","folderID","setFolderID","type","setType","text","setText","handleFileChange","e","selectedFiles","target","length","handleSubmit","preventDefault","alert","formData","FormData","append","forEach","file","response","fetch","method","body","data","json","ok","error","console","className","children","onSubmit","placeholder","value","onChange","multiple","accept","includes"],"sources":["C:/malidagproduct/src/components/getItemId.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadItem = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [folderID, setFolderID] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = [...e.target.files];\r\n\r\n    if (selectedFiles.length === 0) return;\r\n\r\n    // **Allow multiple files only for slide_images**\r\n    if (type === \"slide_images\") {\r\n      setFiles(selectedFiles);\r\n    } else {\r\n      setFiles([selectedFiles[0]]); // Only keep the first file\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!folderID || !type || files.length === 0) {\r\n      alert(\"Please fill all fields and select at least one file.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"folderID\", folderID);\r\n    formData.append(\"type\", type);\r\n    formData.append(\"text\", text);\r\n    files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.malidag.com/api/items/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Files uploaded successfully!\");\r\n      } else {\r\n        alert(\"Upload failed: \" + data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Upload failed.\");\r\n    }\r\n  };\r\n  //image-Left_with_text\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Upload Item</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Folder ID\"\r\n          value={folderID}\r\n          onChange={(e) => setFolderID(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <select\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        >\r\n          <option value=\"\">Select Type</option>\r\n          <option value=\"slide_images\">Slide Images (Multiple Allowed)</option>\r\n          <option value=\"image_with_text\">Image with Text</option>\r\n          <option value=\"single_image\">Single Image</option>\r\n          <option value=\"image-Left_with_text\">Left-Image with Text</option>\r\n          <option value=\"video_with_text\">Video with Text</option>\r\n          <option value=\"single_video\">Single Video</option>\r\n        </select>\r\n        <textarea\r\n          placeholder=\"Text (optional)\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        ></textarea>\r\n\r\n        {/* Conditionally allow multiple files only for slide_images */}\r\n        <input\r\n          type=\"file\"\r\n          multiple={type === \"slide_images\"} // Only allow multiple if type is slide_images\r\n          accept={type.includes(\"video\") ? \"video/*\" : \"image/*\"} // Restrict file types\r\n          onChange={handleFileChange}\r\n          className=\"border p-2 w-full\"\r\n        />\r\n\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">\r\n          Upload Item\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadItem;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAc,gBAAgB,CAAIC,CAAC,EAAK,CAC9B,KAAM,CAAAC,aAAa,CAAG,CAAC,GAAGD,CAAC,CAACE,MAAM,CAACX,KAAK,CAAC,CAEzC,GAAIU,aAAa,CAACE,MAAM,GAAK,CAAC,CAAE,OAEhC;AACA,GAAIR,IAAI,GAAK,cAAc,CAAE,CAC3BH,QAAQ,CAACS,aAAa,CAAC,CACzB,CAAC,IAAM,CACLT,QAAQ,CAAC,CAACS,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AAChC,CACF,CAAC,CAED,KAAM,CAAAG,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAChCA,CAAC,CAACK,cAAc,CAAC,CAAC,CAElB,GAAI,CAACZ,QAAQ,EAAI,CAACE,IAAI,EAAIJ,KAAK,CAACY,MAAM,GAAK,CAAC,CAAE,CAC5CG,KAAK,CAAC,sDAAsD,CAAC,CAC7D,OACF,CAEA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,CAAEhB,QAAQ,CAAC,CACrCc,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEd,IAAI,CAAC,CAC7BY,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEZ,IAAI,CAAC,CAC7BN,KAAK,CAACmB,OAAO,CAAEC,IAAI,EAAKJ,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEE,IAAI,CAAC,CAAC,CAEvD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0CAA0C,CAAE,CACvEC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAER,QACR,CAAC,CAAC,CAEF,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACfZ,KAAK,CAAC,8BAA8B,CAAC,CACvC,CAAC,IAAM,CACLA,KAAK,CAAC,iBAAiB,CAAGU,IAAI,CAACG,KAAK,CAAC,CACvC,CACF,CAAE,MAAOA,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9Cb,KAAK,CAAC,gBAAgB,CAAC,CACzB,CACF,CAAC,CACD;AAEA,mBACEjB,KAAA,QAAKgC,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBnC,IAAA,OAAIkC,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cACxDjC,KAAA,SAAMkC,QAAQ,CAAEnB,YAAa,CAACiB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACjDnC,IAAA,UACEQ,IAAI,CAAC,MAAM,CACX6B,WAAW,CAAC,WAAW,CACvBC,KAAK,CAAEhC,QAAS,CAChBiC,QAAQ,CAAG1B,CAAC,EAAKN,WAAW,CAACM,CAAC,CAACE,MAAM,CAACuB,KAAK,CAAE,CAC7CJ,SAAS,CAAC,mBAAmB,CAC9B,CAAC,cACFhC,KAAA,WACEoC,KAAK,CAAE9B,IAAK,CACZ+B,QAAQ,CAAG1B,CAAC,EAAKJ,OAAO,CAACI,CAAC,CAACE,MAAM,CAACuB,KAAK,CAAE,CACzCJ,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAE7BnC,IAAA,WAAQsC,KAAK,CAAC,EAAE,CAAAH,QAAA,CAAC,aAAW,CAAQ,CAAC,cACrCnC,IAAA,WAAQsC,KAAK,CAAC,cAAc,CAAAH,QAAA,CAAC,iCAA+B,CAAQ,CAAC,cACrEnC,IAAA,WAAQsC,KAAK,CAAC,iBAAiB,CAAAH,QAAA,CAAC,iBAAe,CAAQ,CAAC,cACxDnC,IAAA,WAAQsC,KAAK,CAAC,cAAc,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClDnC,IAAA,WAAQsC,KAAK,CAAC,sBAAsB,CAAAH,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAClEnC,IAAA,WAAQsC,KAAK,CAAC,iBAAiB,CAAAH,QAAA,CAAC,iBAAe,CAAQ,CAAC,cACxDnC,IAAA,WAAQsC,KAAK,CAAC,cAAc,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC5C,CAAC,cACTnC,IAAA,aACEqC,WAAW,CAAC,iBAAiB,CAC7BC,KAAK,CAAE5B,IAAK,CACZ6B,QAAQ,CAAG1B,CAAC,EAAKF,OAAO,CAACE,CAAC,CAACE,MAAM,CAACuB,KAAK,CAAE,CACzCJ,SAAS,CAAC,mBAAmB,CACpB,CAAC,cAGZlC,IAAA,UACEQ,IAAI,CAAC,MAAM,CACXgC,QAAQ,CAAEhC,IAAI,GAAK,cAAgB;AAAA,CACnCiC,MAAM,CAAEjC,IAAI,CAACkC,QAAQ,CAAC,OAAO,CAAC,CAAG,SAAS,CAAG,SAAW;AAAA,CACxDH,QAAQ,CAAE3B,gBAAiB,CAC3BsB,SAAS,CAAC,mBAAmB,CAC9B,CAAC,cAEFlC,IAAA,WAAQQ,IAAI,CAAC,QAAQ,CAAC0B,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAAC,aAErE,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}