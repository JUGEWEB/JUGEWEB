{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\uploadFolder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadSingleFolder = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n\n  // Handle folder selection\n  const handleFolderUpload = event => {\n    const uploadedFiles = Array.from(event.target.files); // Convert FileList to array\n    setFiles(uploadedFiles); // Store all selected files in state\n  };\n\n  // Upload all files to the backend\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      alert(\"No files selected!\");\n      return;\n    }\n    const formData = new FormData();\n\n    // Add all files to FormData\n    files.forEach(file => {\n      formData.append(\"files\", file); // Use a single field \"files\"\n    });\n    try {\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Single Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      webkitdirectory: \"true\",\n      directory: \"true\",\n      multiple: true,\n      onChange: handleFolderUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.webkitRelativePath\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadSingleFolder, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = UploadSingleFolder;\nexport default UploadSingleFolder;\nvar _c;\n$RefreshReg$(_c, \"UploadSingleFolder\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadSingleFolder","_s","files","setFiles","handleFolderUpload","event","uploadedFiles","Array","from","target","handleUpload","length","alert","formData","FormData","forEach","file","append","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","webkitdirectory","directory","multiple","onChange","map","index","webkitRelativePath","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/uploadFolder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadSingleFolder = () => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  // Handle folder selection\r\n  const handleFolderUpload = (event) => {\r\n    const uploadedFiles = Array.from(event.target.files); // Convert FileList to array\r\n    setFiles(uploadedFiles); // Store all selected files in state\r\n  };\r\n\r\n  // Upload all files to the backend\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      alert(\"No files selected!\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    // Add all files to FormData\r\n    files.forEach((file) => {\r\n      formData.append(\"files\", file); // Use a single field \"files\"\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3008/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      console.log(\"Upload successful:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Single Folder</h2>\r\n\r\n      {/* Input for folder selection */}\r\n      <input\r\n        type=\"file\"\r\n        webkitdirectory=\"true\"\r\n        directory=\"true\"\r\n        multiple\r\n        onChange={handleFolderUpload}\r\n      />\r\n\r\n      {/* Display selected files */}\r\n      <div>\r\n        <h3>Selected Files:</h3>\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>{file.webkitRelativePath}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Upload Button */}\r\n      <button onClick={handleUpload}>Upload Folder</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadSingleFolder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}