{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\beautyheader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3001\"; // Base URL for items API\n\nconst BeautyHeader = () => {\n  _s();\n  const [selectedType, setSelectedType] = useState('');\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const beautyTypes = ['makeup', 'eyebrow', 'facial-care', 'perfume', 'skincare']; // Use URL-friendly names\n\n  // Handle selecting beauty type\n  const handleTypeChange = e => {\n    setSelectedType(e.target.value);\n    setImageUrl(null); // Reset image if changing type\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (!selectedType) {\n      alert('Please select a beauty type before uploading.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      setLoading(true);\n      const response = await axios.post(`http://localhost:7000/beauty/${selectedType}/image`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        withCredentials: false // Ensure CORS does not block\n      });\n      setImageUrl(response.data.imageUrl);\n      setImage(file);\n    } catch (error) {\n      var _error$response;\n      console.error('Error uploading image:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to upload image. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beauty Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedType,\n      onChange: handleTypeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Beauty Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), beautyTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: [type.replace('-', ' '), \" \"]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), selectedType && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Uploaded Image for \", selectedType.replace('-', ' ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: selectedType,\n        style: {\n          width: '1200px',\n          height: 'auto',\n          borderRadius: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(BeautyHeader, \"BlG0nBUT2U9OmvJoROXQa9Xy2o4=\");\n_c = BeautyHeader;\nexport default BeautyHeader;\nvar _c;\n$RefreshReg$(_c, \"BeautyHeader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","BeautyHeader","_s","selectedType","setSelectedType","image","setImage","imageUrl","setImageUrl","loading","setLoading","beautyTypes","handleTypeChange","e","target","value","handleImageUpload","file","files","alert","formData","FormData","append","response","post","headers","withCredentials","data","error","_error$response","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","type","replace","accept","src","alt","style","width","height","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/beautyheader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:3001\"; // Base URL for items API\r\n\r\nconst BeautyHeader = () => {\r\n  const [selectedType, setSelectedType] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const beautyTypes = ['makeup', 'eyebrow', 'facial-care', 'perfume', 'skincare']; // Use URL-friendly names\r\n\r\n  // Handle selecting beauty type\r\n  const handleTypeChange = (e) => {\r\n    setSelectedType(e.target.value);\r\n    setImageUrl(null); // Reset image if changing type\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!selectedType) {\r\n      alert('Please select a beauty type before uploading.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        `http://localhost:7000/beauty/${selectedType}/image`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          withCredentials: false // Ensure CORS does not block\r\n        }\r\n      );\r\n\r\n      setImageUrl(response.data.imageUrl);\r\n      setImage(file);\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error.response?.data || error.message);\r\n      alert('Failed to upload image. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Beauty Header</h1>\r\n\r\n      {/* Select Beauty Type */}\r\n      <select value={selectedType} onChange={handleTypeChange}>\r\n        <option value=\"\">Select Beauty Type</option>\r\n        {beautyTypes.map((type) => (\r\n          <option key={type} value={type}>\r\n            {type.replace('-', ' ')} {/* Display as readable text */}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Image Upload Section */}\r\n      {selectedType && (\r\n        <>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n          {loading && <p>Uploading...</p>}\r\n        </>\r\n      )}\r\n\r\n      {/* Display the uploaded image */}\r\n      {imageUrl && (\r\n        <div>\r\n          <h2>Uploaded Image for {selectedType.replace('-', ' ')}</h2>\r\n          <img\r\n            src={imageUrl}\r\n            alt={selectedType}\r\n            style={{ width: '1200px', height: 'auto', borderRadius: '8px' }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeautyHeader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}