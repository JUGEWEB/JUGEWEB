{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\getItemId.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadItem = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [folderID, setFolderID] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const handleFileChange = e => {\n    const selectedFiles = [...e.target.files];\n    if (selectedFiles.length === 0) return;\n\n    // Extract folder name (first file path before the first \"/\")\n    const firstFile = selectedFiles[0];\n    const relativePath = firstFile.webkitRelativePath;\n    const folderName = relativePath.split(\"/\")[0];\n    setFolderID(folderName); // Set Folder ID to folder name\n    setFiles(selectedFiles);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!folderID || !type || files.length === 0) {\n      alert(\"Please fill all fields and select at least one file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"folderID\", folderID);\n    formData.append(\"type\", type);\n    formData.append(\"text\", text);\n    files.forEach(file => formData.append(\"files\", file));\n    try {\n      const response = await fetch(\"http://localhost:5000/api/items/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Files uploaded successfully!\");\n      } else {\n        alert(\"Upload failed: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      alert(\"Upload failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Upload Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Folder ID\",\n        value: folderID,\n        onChange: e => setFolderID(e.target.value),\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        className: \"border p-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"slide_images\",\n          children: \"Slide Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"image_with_text\",\n          children: \"Image with Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"single_image\",\n          children: \"Single Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"video_with_text\",\n          children: \"Video with Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"single_video\",\n          children: \"Single Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Text (optional)\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        webkitdirectory: \"true\" // Enable folder selection\n        ,\n        directory: \"\" // Some browsers also need this\n        ,\n        accept: type.includes(\"video\") ? \"video/*\" : \"image/*\" // Ensure correct file types\n        ,\n        onChange: handleFileChange,\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Upload Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadItem, \"GYq1BshAJpyCTw4ZgJynI5ggHXE=\");\n_c = UploadItem;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"UploadItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadItem","_s","files","setFiles","folderID","setFolderID","type","setType","text","setText","handleFileChange","e","selectedFiles","target","length","firstFile","relativePath","webkitRelativePath","folderName","split","handleSubmit","preventDefault","alert","formData","FormData","append","forEach","file","response","fetch","method","body","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","multiple","webkitdirectory","directory","accept","includes","_c","Upload","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/getItemId.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadItem = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [folderID, setFolderID] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = [...e.target.files];\r\n\r\n    if (selectedFiles.length === 0) return;\r\n\r\n    // Extract folder name (first file path before the first \"/\")\r\n    const firstFile = selectedFiles[0];\r\n    const relativePath = firstFile.webkitRelativePath;\r\n    const folderName = relativePath.split(\"/\")[0];\r\n\r\n    setFolderID(folderName); // Set Folder ID to folder name\r\n    setFiles(selectedFiles);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!folderID || !type || files.length === 0) {\r\n      alert(\"Please fill all fields and select at least one file.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"folderID\", folderID);\r\n    formData.append(\"type\", type);\r\n    formData.append(\"text\", text);\r\n    files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/items/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Files uploaded successfully!\");\r\n      } else {\r\n        alert(\"Upload failed: \" + data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Upload failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Upload Folder</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Folder ID\"\r\n          value={folderID}\r\n          onChange={(e) => setFolderID(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <select\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        >\r\n          <option value=\"\">Select Type</option>\r\n          <option value=\"slide_images\">Slide Images</option>\r\n          <option value=\"image_with_text\">Image with Text</option>\r\n          <option value=\"single_image\">Single Image</option>\r\n          <option value=\"video_with_text\">Video with Text</option>\r\n          <option value=\"single_video\">Single Video</option>\r\n        </select>\r\n        <textarea\r\n          placeholder=\"Text (optional)\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          className=\"border p-2 w-full\"\r\n        ></textarea>\r\n        \r\n        {/* FOLDER UPLOAD (webkitdirectory) */}\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          webkitdirectory=\"true\" // Enable folder selection\r\n          directory=\"\" // Some browsers also need this\r\n          accept={type.includes(\"video\") ? \"video/*\" : \"image/*\"} // Ensure correct file types\r\n          onChange={handleFileChange}\r\n          className=\"border p-2 w-full\"\r\n        />\r\n\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">\r\n          Upload Folder\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}