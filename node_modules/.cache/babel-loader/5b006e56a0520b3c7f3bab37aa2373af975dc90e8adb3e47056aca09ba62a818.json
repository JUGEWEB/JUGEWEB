{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\BNB SMART CONTRACT\\\\malidagproduct\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\n// src/FileUpload.js\nimport React, { useState } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage } from './firebaseConfig'; // Assuming firebase.js has initialized Firebase and storage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  setMediaUrl\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    if (!file) return;\n    const storageRef = ref(storage, `uploads/${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n    }, error => {\n      console.error('Upload failed:', error);\n    }, async () => {\n      const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n      setMediaUrl(downloadURL); // Send back the URL to AddItemForm\n      setFile(null); // Reset file input after upload\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","ref","uploadBytesResumable","getDownloadURL","storage","jsxDEV","_jsxDEV","FileUpload","setMediaUrl","_s","file","setFile","handleFileChange","e","target","files","handleFileUpload","storageRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","downloadURL","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/BNB SMART CONTRACT/malidagproduct/src/components/FileUpload.js"],"sourcesContent":["// src/FileUpload.js\r\nimport React, { useState } from 'react';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from './firebaseConfig'; // Assuming firebase.js has initialized Firebase and storage\r\n\r\nconst FileUpload = ({ setMediaUrl }) => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (!file) return;\r\n\r\n    const storageRef = ref(storage, `uploads/${file.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n      },\r\n      (error) => {\r\n        console.error('Upload failed:', error);\r\n      },\r\n      async () => {\r\n        const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\r\n        setMediaUrl(downloadURL); // Send back the URL to AddItemForm\r\n        setFile(null); // Reset file input after upload\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleFileUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,SAASC,OAAO,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,UAAU,GAAGhB,GAAG,CAACG,OAAO,EAAE,WAAWM,IAAI,CAACQ,IAAI,EAAE,CAAC;IACvD,MAAMC,UAAU,GAAGjB,oBAAoB,CAACe,UAAU,EAAEP,IAAI,CAAC;IAEzDS,UAAU,CAACC,EAAE,CACX,eAAe,EACdC,QAAQ,IAAK;MACZ,MAAMC,QAAQ,GAAID,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAI,GAAG;MACxEC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGJ,QAAQ,GAAG,QAAQ,CAAC;IACjD,CAAC,EACAK,KAAK,IAAK;MACTF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,EACD,YAAY;MACV,MAAMC,WAAW,GAAG,MAAMzB,cAAc,CAACgB,UAAU,CAACE,QAAQ,CAACpB,GAAG,CAAC;MACjEO,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC;MAC1BjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CACF,CAAC;EACH,CAAC;EAED,oBACEL,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD7B,OAAA;MAAQ8B,OAAO,EAAEpB,gBAAiB;MAAAa,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAC1B,EAAA,CApCIF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}